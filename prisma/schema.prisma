// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id     Int     @id @default(autoincrement())
  email  String  @unique
  name   String?
  roleId Int
  roles  Roles[]
}

model Roles {
  id      Int    @id @default(autoincrement())
  name    String
  Users   Users? @relation(fields: [usersId], references: [id])
  usersId Int?
}

model Products {
  id           Int          @id @default(autoincrement())
  name         String
  description  String?
  attachments  String
  isActive     Boolean
  variants     Variants[]
  size         String
  minimumOrder Int
  storeId      Int
  categories   Categories[]
}

model Categories {
  id        Int      @id @default(autoincrement())
  name      String
  productId Int
  products  Products @relation(fields: [productId], references: [id])
}

model Variants {
  id        Int              @id @default(autoincrement())
  name      String
  isActive  Boolean
  productId Int
  products  Products         @relation(fields: [productId], references: [id])
  options   VariantOptions[]
}

model VariantOptions {
  id        Int                   @id @default(autoincrement())
  name      String
  variantId Int
  variant   Variants              @relation(fields: [variantId], references: [id])
  values    VariantOptionValues[]
}

model VariantOptionValues {
  id              Int            @id @default(autoincrement())
  variantOptionId Int
  variantOptions  VariantOptions @relation(fields: [variantOptionId], references: [id])
  sku             String
  weight          Float
  stock           Int
  price           Float
  isActive        Boolean
}
